import React from "react";
import Image from "next/image";
import Link from "next/link";
import ScrollAnimationWrapper from "@/components/custom-components/scroll-animation";
import AnimationComponent from "@/components/custom-components/animation-component";
import { dateFormatToAz } from "@/utils/dateconvert";

const PhotoCard = ({ lang, data }) => {
  return (
    <div className="relative group w-full aspect-[3/2] rounded-2xl">
      <div className="absolute z-30 h-full w-full rounded-2xl p-0 overflow-hidden">
        <Image
          src={`/media-sources/${data.post_image}`}
          alt={data[`seo_${lang}`]}
          fill
          className="object-cover"
          quality={80}
        />
        <div className="absolute inset-0 bg-gradient-to-r from-black/30 via-black/20 to-transparent rounded-2xl" />
        <div className="absolute w-full top-0 left-0 h-full  z-10 rounded-2xl p-6 flex flex-col justify-end items-start">
          <div className="text-[#FFFFFFCC] flex  items-center gap-1 mb-2 text-[1rem]">
            <span>
              <svg
                width="22"
                height="22"
                viewBox="0 0 22 22"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g id="svgexport-19 (5) 1">
                  <g id="Group">
                    <g id="Group_2">
                      <path
                        id="Vector"
                        d="M7.31074 5.40324C6.95571 5.40324 6.6613 5.10883 6.6613 4.7538V2.15603C6.6613 1.80101 6.95571 1.50659 7.31074 1.50659C7.66576 1.50659 7.96018 1.80101 7.96018 2.15603V4.7538C7.96018 5.10883 7.66576 5.40324 7.31074 5.40324ZM14.2381 5.40324C13.8831 5.40324 13.5887 5.10883 13.5887 4.7538V2.15603C13.5887 1.80101 13.8831 1.50659 14.2381 1.50659C14.5931 1.50659 14.8876 1.80101 14.8876 2.15603V4.7538C14.8876 5.10883 14.5931 5.40324 14.2381 5.40324ZM7.7437 12.9801C7.63113 12.9801 7.51856 12.9541 7.41465 12.9108C7.30208 12.8675 7.21549 12.8069 7.12889 12.7289C6.97303 12.5644 6.87778 12.3479 6.87778 12.1141C6.87778 12.0016 6.90375 11.889 6.94705 11.7851C6.99035 11.6812 7.05096 11.5859 7.12889 11.4993C7.21549 11.4214 7.30208 11.3608 7.41465 11.3175C7.72638 11.1876 8.11604 11.2569 8.3585 11.4993C8.51437 11.6639 8.60962 11.889 8.60962 12.1141C8.60962 12.1661 8.60096 12.2267 8.5923 12.2873C8.58364 12.3393 8.56632 12.3912 8.54035 12.4432C8.52303 12.4951 8.49705 12.5471 8.46241 12.599C8.43643 12.6423 8.39314 12.6856 8.3585 12.7289C8.19398 12.8848 7.96884 12.9801 7.7437 12.9801ZM10.7744 12.9801C10.6619 12.9801 10.5493 12.9541 10.4454 12.9108C10.3328 12.8675 10.2462 12.8069 10.1596 12.7289C10.0038 12.5644 9.9085 12.3479 9.9085 12.1141C9.9085 12.0016 9.93448 11.889 9.97778 11.7851C10.0211 11.6812 10.0817 11.5859 10.1596 11.4993C10.2462 11.4214 10.3328 11.3608 10.4454 11.3175C10.7571 11.1789 11.1468 11.2569 11.3892 11.4993C11.5451 11.6639 11.6403 11.889 11.6403 12.1141C11.6403 12.1661 11.6317 12.2267 11.623 12.2873C11.6144 12.3393 11.597 12.3912 11.5711 12.4432C11.5538 12.4951 11.5278 12.5471 11.4931 12.599C11.4672 12.6423 11.4239 12.6856 11.3892 12.7289C11.2247 12.8848 10.9996 12.9801 10.7744 12.9801ZM13.8051 12.9801C13.6926 12.9801 13.58 12.9541 13.4761 12.9108C13.3635 12.8675 13.2769 12.8069 13.1903 12.7289L13.0864 12.599C13.0536 12.5508 13.0274 12.4984 13.0085 12.4432C12.9835 12.3941 12.966 12.3416 12.9565 12.2873C12.9479 12.2267 12.9392 12.1661 12.9392 12.1141C12.9392 11.889 13.0345 11.6639 13.1903 11.4993C13.2769 11.4214 13.3635 11.3608 13.4761 11.3175C13.7965 11.1789 14.1775 11.2569 14.42 11.4993C14.5758 11.6639 14.6711 11.889 14.6711 12.1141C14.6711 12.1661 14.6624 12.2267 14.6538 12.2873C14.6451 12.3393 14.6278 12.3912 14.6018 12.4432C14.5845 12.4951 14.5585 12.5471 14.5239 12.599C14.4979 12.6423 14.4546 12.6856 14.42 12.7289C14.2554 12.8848 14.0303 12.9801 13.8051 12.9801ZM7.7437 16.0108C7.63113 16.0108 7.51856 15.9848 7.41465 15.9415C7.31074 15.8982 7.21549 15.8376 7.12889 15.7597C6.97303 15.5951 6.87778 15.37 6.87778 15.1449C6.87778 15.0323 6.90375 14.9197 6.94705 14.8158C6.99035 14.7032 7.05096 14.608 7.12889 14.5301C7.44928 14.2097 8.03811 14.2097 8.3585 14.5301C8.51437 14.6946 8.60962 14.9197 8.60962 15.1449C8.60962 15.37 8.51437 15.5951 8.3585 15.7597C8.19398 15.9155 7.96884 16.0108 7.7437 16.0108ZM10.7744 16.0108C10.5493 16.0108 10.3241 15.9155 10.1596 15.7597C10.0038 15.5951 9.9085 15.37 9.9085 15.1449C9.9085 15.0323 9.93448 14.9197 9.97778 14.8158C10.0211 14.7032 10.0817 14.608 10.1596 14.5301C10.48 14.2097 11.0688 14.2097 11.3892 14.5301C11.4672 14.608 11.5278 14.7032 11.5711 14.8158C11.6144 14.9197 11.6403 15.0323 11.6403 15.1449C11.6403 15.37 11.5451 15.5951 11.3892 15.7597C11.2247 15.9155 10.9996 16.0108 10.7744 16.0108ZM13.8051 16.0108C13.58 16.0108 13.3549 15.9155 13.1903 15.7597C13.1102 15.6783 13.0482 15.5809 13.0085 15.4739C12.9652 15.37 12.9392 15.2574 12.9392 15.1449C12.9392 15.0323 12.9652 14.9197 13.0085 14.8158C13.0518 14.7032 13.1124 14.608 13.1903 14.5301C13.3895 14.3309 13.6926 14.2356 13.9697 14.2963C14.0303 14.3049 14.0822 14.3222 14.1342 14.3482C14.1862 14.3655 14.2381 14.3915 14.2901 14.4261C14.3334 14.4521 14.3767 14.4954 14.42 14.5301C14.5758 14.6946 14.6711 14.9197 14.6711 15.1449C14.6711 15.37 14.5758 15.5951 14.42 15.7597C14.2554 15.9155 14.0303 16.0108 13.8051 16.0108ZM18.1348 8.94486H3.41409C3.05906 8.94486 2.76465 8.65044 2.76465 8.29542C2.76465 7.94039 3.05906 7.64598 3.41409 7.64598H18.1348C18.4898 7.64598 18.7842 7.94039 18.7842 8.29542C18.7842 8.65044 18.4898 8.94486 18.1348 8.94486Z"
                        fill="#E1BB78"
                      />
                      <path
                        id="Vector_2"
                        d="M14.2385 20.1238H7.31108C4.15047 20.1238 2.33203 18.3054 2.33203 15.1448V7.78447C2.33203 4.62385 4.15047 2.80542 7.31108 2.80542H14.2385C17.3991 2.80542 19.2175 4.62385 19.2175 7.78447V15.1448C19.2175 18.3054 17.3991 20.1238 14.2385 20.1238ZM7.31108 4.1043C4.83454 4.1043 3.63091 5.30793 3.63091 7.78447V15.1448C3.63091 17.6213 4.83454 18.825 7.31108 18.825H14.2385C16.715 18.825 17.9186 17.6213 17.9186 15.1448V7.78447C17.9186 5.30793 16.715 4.1043 14.2385 4.1043H7.31108Z"
                        fill="#E1BB78"
                      />
                    </g>
                  </g>
                </g>
              </svg>
            </span>
            <span>{dateFormatToAz(data.post_date, "eeee, MMMM d, yyyy")}</span>
          </div>
          <p className="text-white text-[1rem] w-[100%]">{data[`title_${lang}`]}</p>
        </div>
      </div>
      <div className="absolute top-0 left-0 w-full bg-[#f0ddbb] z-20  h-full rounded-2xl -rotate-[4deg]"></div>
      <div className="absolute inset-0 flex items-center justify-center bg-[#00000059] opacity-0 group-hover:opacity-100 transition-opacity duration-300 z-[35] rounded-2xl">
        <Link
          href={`/${lang}/gallery/photos/${data[`url_${lang}`]}`}
          className="text-white text-4xl font-bold w-full h-full flex items-center justify-center"
        >
          <Image src={"/plus-icon.svg"} alt={"plus icon"} width={74} height={74} />
        </Link>
      </div>
    </div>
  );
};

export default function PhotoList({ data, lang }) {
  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-12">
      {data?.map((item, index) => {
        return (
          <React.Fragment key={item.id}>
            <ScrollAnimationWrapper>
              <AnimationComponent delay={index * 0.2}>
                <PhotoCard data={item} lang={lang} />
              </AnimationComponent>
            </ScrollAnimationWrapper>
          </React.Fragment>
        );
      })}
    </div>
  );
}
